i tried for hours on end to bring over the code and nothing would work so i had to copy and paste.

package com.example.proj;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import java.io.*;
import java.util.*;

public class TaskManagerApp extends Application {
    private ArrayList<Task> tasks = new ArrayList<>();

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        TextField titleField = new TextField();
        titleField.setPromptText("Task Title");
        Button addButton = new Button("Add Task");
        Button saveButton = new Button("Save Tasks");
        Button loadButton = new Button("Load Tasks");

        addButton.setOnAction(e -> {
            tasks.add(new Task(titleField.getText(), new Date()));
            titleField.clear();
        });

        saveButton.setOnAction(e -> saveTasks("tasks.dat"));
        loadButton.setOnAction(e -> loadTasks("tasks.dat"));

        VBox layout = new VBox(10, titleField, addButton, saveButton, loadButton);
        primaryStage.setScene(new Scene(layout, 300, 200));
        primaryStage.setTitle("Task Manager");
        primaryStage.show();
    }

    private void saveTasks(String filename) {
        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(filename))) {
            out.writeObject(tasks);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void loadTasks(String filename) {
        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(filename))) {
            tasks = (ArrayList<Task>) in.readObject();
            MergeSort.mergeSort(tasks);  // Apply MergeSort to tasks after loading
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}

class Task implements Serializable {
    private String title;
    private Date dueDate;

    public Task(String title, Date dueDate) {
        this.title = title;
        this.dueDate = dueDate;
    }

    public Date getDueDate() {
        return dueDate;
    }

    @Override
    public String toString() {
        return "Task{" + "title='" + title + "', dueDate=" + dueDate + '}';
    }
}

class MergeSort {
    public static <T extends Comparable<T>> void mergeSort(ArrayList<T> list) {
        if (list.size() <= 1) return;
        int mid = list.size() / 2;
        ArrayList<T> left = new ArrayList<>(list.subList(0, mid));
        ArrayList<T> right = new ArrayList<>(list.subList(mid, list.size()));
        mergeSort(left);
        mergeSort(right);
        merge(list, left, right);
    }

    private static <T extends Comparable<T>> void merge(ArrayList<T> list, ArrayList<T> left, ArrayList<T> right) {
        int i = 0, j = 0, k = 0;
        while (i < left.size() && j < right.size()) {
            if (left.get(i).compareTo(right.get(j)) <= 0) {
                list.set(k++, left.get(i++));
            } else {
                list.set(k++, right.get(j++));
            }
        }
        while (i < left.size()) list.set(k++, left.get(i++));
        while (j < right.size()) list.set(k++, right.get(j++));
    }

}
